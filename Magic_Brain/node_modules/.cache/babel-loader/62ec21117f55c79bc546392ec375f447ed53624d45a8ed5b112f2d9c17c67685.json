{"ast":null,"code":"var _jsxFileName = \"/Users/zachaugust/Desktop/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n// const app = new Clarifai.App({\n//     apiKey: '3784dc030efe4f808ee15a8556a38831'\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = '3784dc030efe4f808ee15a8556a38831';\n  const USER_ID = 'zaugust48';\n  const APP_ID = 'Imagerecognition';\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n          // \"base64\": IMAGE_BYTES_STRING\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onSubmitSignIn = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict('face-detection', this.state.input).then(response => {\n        console.log('hi', response);\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        color: \"#ff0000\",\n        num: 200,\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ParticlesBg","Clarifai","SignIn","Navigation","Register","FaceRecognition","Logo","ImageLinkForm","Rank","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onSubmitSignIn","state","app","models","predict","then","response","console","log","fetch","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render","className","children","color","num","type","bg","fileName","_jsxFileName","lineNumber","columnNumber","onButtonSubmit"],"sources":["/Users/zachaugust/Desktop/smart-brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n\n\n// const app = new Clarifai.App({\n//     apiKey: '3784dc030efe4f808ee15a8556a38831'\n// });\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n    const PAT = '3784dc030efe4f808ee15a8556a38831';\n    const USER_ID = 'zaugust48';\n    const APP_ID = 'Imagerecognition';\n    const MODEL_ID = 'face-detection';\n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n        \"user_app_id\": {\n            \"user_id\": USER_ID,\n            \"app_id\": APP_ID\n        },\n        \"inputs\": [\n            {\n                \"data\": {\n                    \"image\": {\n                        \"url\": IMAGE_URL\n                        // \"base64\": IMAGE_BYTES_STRING\n                    }\n                }\n            }\n        ]\n    });\n    const requestOptions= {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Key ' + PAT\n        },\n        body: raw\n    \n    };\n    return requestOptions\n}\n    \n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onSubmitSignIn = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict('face-detection', this.state.input)\n      .then(response => {\n        console.log('hi', response)\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg color=\"#ff0000\" num={200} type=\"cobweb\" bg={true} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}